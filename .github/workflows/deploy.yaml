name: deploy
on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '*'
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 4
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: build lambda
        uses: actions/setup-go@v3
        with:
          go-version: '^1.17'
      - name: build
        working-directory: .
        run: |
          GOOS=linux CGO_ENABLED=0 go build -o lambda-lambda lambda/main.go
          ls
          zip lambda.zip lambda-lambda
          ls
          chmod 777 lambda.zip
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: false
      - name: Terraform Apply
        id: apply
        #        if: github.event_name != 'pull_request' # apply only on merge-to-master
        run: terraform apply -no-color -input=false -auto-approve
        continue-on-error: false